K<[y]> := PolynomialRing(GF(2),5);

L1 := [*
Matrix(K,1,20,[y[2] + y[4],y[1] + y[4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[y[2] + y[4] + 1,y[1] + y[4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[y[2] + y[4],y[1] + y[4] + 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[y[2] + y[4] + 1,y[1] + y[4] + 1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,y[2] + y[4],y[3] + y[4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,y[2] + y[4] + 1,y[3] + y[4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,y[2] + y[4],y[3] + y[4] + 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,y[2] + y[4] + 1,y[3] + y[4] + 1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,y[2] + y[4],y[3] + y[4],y[4] + y[5],0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,y[2] + y[4] + 1,y[3] + y[4],y[4] + y[5],0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,y[2] + y[4],y[3] + y[4] + 1,y[4] + y[5],0,0,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,y[2] + y[4],y[4],0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,y[2] + y[4] + 1,y[3] + y[4] + 1,y[4] + y[5] + 1,0,0,0,0,0,0,0,0,0,0, 0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,y[2] + y[4] + 1,y[4],0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,y[2] + y[4],y[4] + 1,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,1,0,0,0,0,0,1,y[2] + y[4] + 1,y[4] + 1,0,0,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,y[1] + y[4],y[4],0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,y[1] + y[4] + 1,y[4],0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,y[1] + y[4],y[4] + 1,0,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,y[1] + y[4] + 1,y[4] + 1,1,0,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,y[3] + y[4],y[4],0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,y[3] + y[4] + 1,y[4],0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,y[3] + y[4],y[4] + 1,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,y[3] + y[4] + 1,y[4] + 1,1,0,0,0]),
Matrix(K,1,20,[y[2] + y[4],0,0,y[2] + y[4],0,0,0,0,0,y[2] + y[4],0,0,0,0,0,0,y[2] + y[4],0,0,0]),
Matrix(K,1,20,[y[2] + y[4] + 1,0,0,y[2] + y[4] + 1,0,0,0,0,0,y[2] + y[4] + 1,0,0,0,0,0,0,y[2] + y[4] +1,0,0,0]),
Matrix(K,1,20,[y[2] + y[4],0,0,y[2] + y[4],0,0,0,0,0,y[2] + y[4],0,0,0,0,0,0,y[2] + y[4],1,0,0]),
Matrix(K,1,20,[y[2] + y[4] + 1,0,0,y[2] + y[4] + 1,0,1,0,0,1,y[2] + y[4] + 1,0,0,0,1,0,0,y[2] + y[4] +1,1,0,0]),
Matrix(K,1,20,[0,y[1] + y[4],0,0,0,0,y[1] + y[4],0,0,0,0,y[1] + y[4],0,y[1] + y[4],0,0,y[1] + y[4],0, 0,0]),
Matrix(K,1,20,[0,y[1] + y[4] + 1,0,0,0,0,y[1] + y[4] + 1,0,0,0,0,y[1] + y[4] + 1,0,y[1] + y[4] + 1,0,0, y[1] + y[4] + 1,0,0,0]),
Matrix(K,1,20,[0,y[1] + y[4],0,0,0,0,y[1] + y[4],0,0,0,0,y[1] + y[4],0,y[1] + y[4],0,0,y[1] + y[4],0, 1,0]),
Matrix(K,1,20,[0,y[1] + y[4] + 1,1,0,0,1,y[1] + y[4] + 1,0,1,0,0,y[1] + y[4] + 1,0,y[1] + y[4],0,0, y[1] + y[4],0,1,0]),
Matrix(K,1,20,[0,0,0,0,y[3] + y[4],y[3] + y[4],0,y[3] + y[4],y[3] + y[4],0,0,0,0,y[3] + y[4],y[3] + y[4], 0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,y[3] + y[4] + 1,y[3] + y[4] + 1,0,y[3] + y[4] + 1,y[3] + y[4] + 1,0,0,0,0,y[3] + y[4]+ 1,y[3] + y[4] + 1,0,0,0,0,0]),
Matrix(K,1,20,[0,0,0,0,y[3] + y[4],y[3] + y[4],0,y[3] + y[4],y[3] + y[4],0,0,0,0,y[3] + y[4],y[3] + y[4], 0,0,0,0,1]),
Matrix(K,1,20,[0,0,1,0,y[3] + y[4] + 1,y[3] + y[4] + 1,0,y[3] + y[4] + 1,y[3] + y[4],0,0,0,0,y[3] + y[4], y[3] + y[4] + 1,0,1,0,0,1]),
Matrix(K,1,20,[0,0,y[4],0,0,y[4],0,0,0,0,y[4],0,y[4],0,0,y[4],y[4],0,0,0]),
Matrix(K,1,20,[0,0,y[4] + 1,0,0,y[4] + 1,0,0,0,0,y[4] + 1,0,y[4] + 1,0,0,y[4] + 1,y[4] + 1,0,0, 0]),
Matrix(K,1,20,[0,0,y[4] + 1,0,0,y[4],0,0,1,0,y[4],0,y[4],0,0,y[4],y[4],1,1,1]),
Matrix(K,1,20,[0,0,y[4],0,0,y[4],0,0,1,0,y[4] + 1,0,y[4] + 1,0,0,y[4] + 1,y[4],1,1,1])
*];


L2 := [*L1[i]+L1[j]: j in [i..40], i in [1..#L1]*];
L3 := [*L2[i]+L1[j]: j in [i..40], i in [1..#L2]*];
L4 := [*L3[i]+L1[j]: j in [i..40], i in [1..#L3]*];
L5 := [*L4[i]+L1[j]: j in [i..40], i in [1..#L4]*];
L6 := [*L5[i]+L1[j]: j in [i..40], i in [1..#L5]*];
L7 := [*L6[i]+L1[j]: j in [i..40], i in [1..#L6]*];
L8 := [*L7[i]+L1[j]: j in [i..40], i in [1..#L7]*];
L9 := [*L8[i]+L1[j]: j in [i..40], i in [1..#L8]*];
L10 := [*L9[i]+L1[j]: j in [i..40], i in [1..#L9]*];
L11 := [*L10[i]+L1[j]: j in [i..40], i in [1..#L10]*];
L12 := [*L11[i]+L1[j]: j in [i..40], i in [1..#L11]*];
L13 := [*L12[i]+L1[j]: j in [i..40], i in [1..#L12]*];
L14 := [*L13[i]+L1[j]: j in [i..40], i in [1..#L13]*];
L15 := [*L14[i]+L1[j]: j in [i..40], i in [1..#L14]*];
L16 := [*L15[i]+L1[j]: j in [i..40], i in [1..#L15]*];
L17 := [*L16[i]+L1[j]: j in [i..40], i in [1..#L16]*];
L18 := [*L17[i]+L1[j]: j in [i..40], i in [1..#L17]*];
L19 := [*L18[i]+L1[j]: j in [i..40], i in [1..#L18]*];
L20 := [*L19[i]+L1[j]: j in [i..40], i in [1..#L19]*];
L21 := [*L20[i]+L1[j]: j in [i..40], i in [1..#L20]*];
L22 := [*L21[i]+L1[j]: j in [i..40], i in [1..#L21]*];
L23 := [*L22[i]+L1[j]: j in [i..40], i in [1..#L22]*];
L24 := [*L23[i]+L1[j]: j in [i..40], i in [1..#L23]*];
L25 := [*L24[i]+L1[j]: j in [i..40], i in [1..#L24]*];
L26 := [*L25[i]+L1[j]: j in [i..40], i in [1..#L25]*];
L27 := [*L26[i]+L1[j]: j in [i..40], i in [1..#L26]*];
L28 := [*L27[i]+L1[j]: j in [i..40], i in [1..#L27]*];
L29 := [*L28[i]+L1[j]: j in [i..40], i in [1..#L28]*];
L30 := [*L29[i]+L1[j]: j in [i..40], i in [1..#L29]*];
L31 := [*L30[i]+L1[j]: j in [i..40], i in [1..#L30]*];
L32 := [*L31[i]+L1[j]: j in [i..40], i in [1..#L31]*];
L33 := [*L32[i]+L1[j]: j in [i..40], i in [1..#L32]*];
L34 := [*L33[i]+L1[j]: j in [i..40], i in [1..#L33]*];
L35 := [*L34[i]+L1[j]: j in [i..40], i in [1..#L34]*];
L36 := [*L35[i]+L1[j]: j in [i..40], i in [1..#L35]*];
L37 := [*L36[i]+L1[j]: j in [i..40], i in [1..#L36]*];
L38 := [*L37[i]+L1[j]: j in [i..40], i in [1..#L37]*];
L39 := [*L38[i]+L1[j]: j in [i..40], i in [1..#L38]*];
L40 := [*L39[i]+L1[j]: j in [i..40], i in [1..#L39]*];

L := L1 cat L2 cat L3 cat L4 cat L5 cat L6 cat L7 cat L8 cat L9 cat L10 cat L11 cat L12 cat L13 cat L14 cat L15 cat L16 cat L17 cat L18 cat L19 cat L20 cat L21 cat L22 cat L23 cat L24 cat L25 cat L26 cat L27 cat L28 cat L29 cat L30 cat L31 cat L32 cat L33 cat L34 cat L35 cat L36 cat L37 cat L38 cat L39 cat L40;

e1 := Matrix(K,1,20,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]);

E := [* *];
e := ZeroMatrix(K,1,20);

for i in [1..20] do
  e[1,i]:=1;
  E := E cat [*e*];
  e := ZeroMatrix(K,1,20);
end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     e[1,i] := 1;
//     e[1,j] := 1;
//     E := E cat [*e*];
//     e := ZeroMatrix(K,1,40);
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       e[1,i] := 1;
//       e[1,j] := 1;
//       e[1,k] := 1;
//       E := E cat [*e*];
//       e := ZeroMatrix(K,1,40);
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         e[1,i] := 1;
//         e[1,j] := 1;
//         e[1,k] := 1;
//         e[1,a] := 1;
//         E := E cat [*e*];
//         e := ZeroMatrix(K,1,40);
//       end for;
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         for b in [a+1..40] do
//           e[1,i] := 1;
//           e[1,j] := 1;
//           e[1,k] := 1;
//           e[1,a] := 1;
//           e[1,b] := 1;
//           E := E cat [*e*];
//           e := ZeroMatrix(K,1,40);
//         end for;
//       end for;
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         for b in [a+1..40] do
//           for c in [b+1..40] do
//             e[1,i] := 1;
//             e[1,j] := 1;
//             e[1,k] := 1;
//             e[1,a] := 1;
//             e[1,b] := 1;
//             e[1,c] := 1;
//             E := E cat [*e*];
//             e := ZeroMatrix(K,1,40);
//           end for;
//         end for;
//       end for;
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         for b in [a+1..40] do
//           for c in [b+1..40] do
//             for d in [d+1..40] do
//               e[1,i] := 1;
//               e[1,j] := 1;
//               e[1,k] := 1;
//               e[1,a] := 1;
//               e[1,b] := 1;
//               e[1,c] := 1;
//               e[1,d] := 1;
//               E := E cat [*e*];
//               e := ZeroMatrix(K,1,40);
//             end for;
//           end for;
//         end for;
//       end for;
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         for b in [a+1..40] do
//           for c in [b+1..40] do
//             for d in [c+1..40] do
//               for f in [d+1..40] do
//                 e[1,i] := 1;
//                 e[1,j] := 1;
//                 e[1,k] := 1;
//                 e[1,a] := 1;
//                 e[1,b] := 1;
//                 e[1,c] := 1;
//                 e[1,d] := 1;
//                 e[1,f] := 1;
//                 E := E cat [*e*];
//                 e := ZeroMatrix(K,1,40);
//               end for;
//             end for;
//           end for;
//         end for;
//       end for;
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         for b in [a+1..40] do
//           for c in [b+1..40] do
//             for d in [c+1..40] do
//               for f in [d+1..40] do
//                 for g in [f+1..40] do
//                   e[1,i] := 1;
//                   e[1,j] := 1;
//                   e[1,k] := 1;
//                   e[1,a] := 1;
//                   e[1,b] := 1;
//                   e[1,c] := 1;
//                   e[1,d] := 1;
//                   e[1,f] := 1;
//                   e[1,g] := 1;
//                   E := E cat [*e*];
//                   e := ZeroMatrix(K,1,40);
//                 end for;
//               end for;
//             end for;
//           end for;
//         end for;
//       end for;
//     end for;
//   end for;
// end for;

// for i in [1..40] do
//   for j in [i+1..40] do
//     for k in [j+1..40] do
//       for a in [k+1..40] do
//         for b in [a+1..40] do
//           for c in [b+1..40] do
//             for d in [c+1..40] do
//               for f in [d+1..40] do
//                 for g in [f+1..40] do
//                   for h in [g+1..40] do
//                     e[1,i] := 1;
//                     e[1,j] := 1;
//                     e[1,k] := 1;
//                     e[1,a] := 1;
//                     e[1,b] := 1;
//                     e[1,c] := 1;
//                     e[1,d] := 1;
//                     e[1,f] := 1;
//                     e[1,g] := 1;
//                     e[1,h] := 1;
//                     E := E cat [*e*];
//                     e := ZeroMatrix(K,1,40);
//                   end for;
//                 end for;
//               end for;
//             end for;
//           end for;
//         end for;
//       end for;
//     end for;
//   end for;
// end for;

C1 := [* *];

for k in [1..#L] do
  for j in [1..#L] do
    for i in [1..#E] do
      M := E[i]+L[j];
      if M ne L[k] then
        C1 := C1 cat [*E[i]+L[j]*];
      end if;
    end for;
  end for;
end for;
